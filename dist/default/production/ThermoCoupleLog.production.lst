

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Nov 26 12:57:24 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1512
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0097                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  011D                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  018E                     	;# 
    76  0191                     	;# 
    77  0191                     	;# 
    78  0192                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0194                     	;# 
    82  0195                     	;# 
    83  0196                     	;# 
    84  0197                     	;# 
    85  0199                     	;# 
    86  019A                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019B                     	;# 
    91  019C                     	;# 
    92  019C                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95  019F                     	;# 
    96  020D                     	;# 
    97  0210                     	;# 
    98  0211                     	;# 
    99  0211                     	;# 
   100  0212                     	;# 
   101  0212                     	;# 
   102  0213                     	;# 
   103  0213                     	;# 
   104  0214                     	;# 
   105  0214                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0215                     	;# 
   109  0216                     	;# 
   110  0216                     	;# 
   111  0217                     	;# 
   112  0217                     	;# 
   113  0291                     	;# 
   114  0291                     	;# 
   115  0292                     	;# 
   116  0293                     	;# 
   117  0298                     	;# 
   118  0298                     	;# 
   119  0299                     	;# 
   120  029A                     	;# 
   121  0394                     	;# 
   122  0395                     	;# 
   123  0396                     	;# 
   124  0FE4                     	;# 
   125  0FE5                     	;# 
   126  0FE6                     	;# 
   127  0FE7                     	;# 
   128  0FE8                     	;# 
   129  0FE9                     	;# 
   130  0FEA                     	;# 
   131  0FEB                     	;# 
   132  0FED                     	;# 
   133  0FEE                     	;# 
   134  0FEF                     	;# 
   135  0711                     	;# 
   136  0712                     	;# 
   137  0713                     	;# 
   138  0714                     	;# 
   139  0715                     	;# 
   140  0716                     	;# 
   141  0717                     	;# 
   142  0718                     	;# 
   143  0719                     	;# 
   144  071A                     	;# 
   145  071A                     	;# 
   146  071A                     	;# 
   147  071B                     	;# 
   148  071C                     	;# 
   149  071C                     	;# 
   150  071C                     	;# 
   151  071D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  0116                     	;# 
   202  0117                     	;# 
   203  011D                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  0191                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0193                     	;# 
   211  0193                     	;# 
   212  0194                     	;# 
   213  0195                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  0199                     	;# 
   217  019A                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019C                     	;# 
   223  019C                     	;# 
   224  019D                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  020D                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  0FE4                     	;# 
   256  0FE5                     	;# 
   257  0FE6                     	;# 
   258  0FE7                     	;# 
   259  0FE8                     	;# 
   260  0FE9                     	;# 
   261  0FEA                     	;# 
   262  0FEB                     	;# 
   263  0FED                     	;# 
   264  0FEE                     	;# 
   265  0FEF                     	;# 
   266  0711                     	;# 
   267  0712                     	;# 
   268  0713                     	;# 
   269  0714                     	;# 
   270  0715                     	;# 
   271  0716                     	;# 
   272  0717                     	;# 
   273  0718                     	;# 
   274  0719                     	;# 
   275  071A                     	;# 
   276  071A                     	;# 
   277  071A                     	;# 
   278  071B                     	;# 
   279  071C                     	;# 
   280  071C                     	;# 
   281  071C                     	;# 
   282  071D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0095                     	;# 
   317  0096                     	;# 
   318  0097                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009B                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  0116                     	;# 
   333  0117                     	;# 
   334  011D                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  018E                     	;# 
   338  0191                     	;# 
   339  0191                     	;# 
   340  0192                     	;# 
   341  0193                     	;# 
   342  0193                     	;# 
   343  0194                     	;# 
   344  0195                     	;# 
   345  0196                     	;# 
   346  0197                     	;# 
   347  0199                     	;# 
   348  019A                     	;# 
   349  019B                     	;# 
   350  019B                     	;# 
   351  019B                     	;# 
   352  019B                     	;# 
   353  019C                     	;# 
   354  019C                     	;# 
   355  019D                     	;# 
   356  019E                     	;# 
   357  019F                     	;# 
   358  020D                     	;# 
   359  0210                     	;# 
   360  0211                     	;# 
   361  0211                     	;# 
   362  0212                     	;# 
   363  0212                     	;# 
   364  0213                     	;# 
   365  0213                     	;# 
   366  0214                     	;# 
   367  0214                     	;# 
   368  0215                     	;# 
   369  0215                     	;# 
   370  0215                     	;# 
   371  0216                     	;# 
   372  0216                     	;# 
   373  0217                     	;# 
   374  0217                     	;# 
   375  0291                     	;# 
   376  0291                     	;# 
   377  0292                     	;# 
   378  0293                     	;# 
   379  0298                     	;# 
   380  0298                     	;# 
   381  0299                     	;# 
   382  029A                     	;# 
   383  0394                     	;# 
   384  0395                     	;# 
   385  0396                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0711                     	;# 
   398  0712                     	;# 
   399  0713                     	;# 
   400  0714                     	;# 
   401  0715                     	;# 
   402  0716                     	;# 
   403  0717                     	;# 
   404  0718                     	;# 
   405  0719                     	;# 
   406  071A                     	;# 
   407  071A                     	;# 
   408  071A                     	;# 
   409  071B                     	;# 
   410  071C                     	;# 
   411  071C                     	;# 
   412  071C                     	;# 
   413  071D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009B                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0711                     	;# 
   529  0712                     	;# 
   530  0713                     	;# 
   531  0714                     	;# 
   532  0715                     	;# 
   533  0716                     	;# 
   534  0717                     	;# 
   535  0718                     	;# 
   536  0719                     	;# 
   537  071A                     	;# 
   538  071A                     	;# 
   539  071A                     	;# 
   540  071B                     	;# 
   541  071C                     	;# 
   542  071C                     	;# 
   543  071C                     	;# 
   544  071D                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  0010                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0090                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009C                     	;# 
   589  009D                     	;# 
   590  009E                     	;# 
   591  010C                     	;# 
   592  010D                     	;# 
   593  010E                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  011D                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  018E                     	;# 
   600  0191                     	;# 
   601  0191                     	;# 
   602  0192                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0194                     	;# 
   606  0195                     	;# 
   607  0196                     	;# 
   608  0197                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019C                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  020D                     	;# 
   621  0210                     	;# 
   622  0211                     	;# 
   623  0211                     	;# 
   624  0212                     	;# 
   625  0212                     	;# 
   626  0213                     	;# 
   627  0213                     	;# 
   628  0214                     	;# 
   629  0214                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0216                     	;# 
   634  0216                     	;# 
   635  0217                     	;# 
   636  0217                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0298                     	;# 
   642  0298                     	;# 
   643  0299                     	;# 
   644  029A                     	;# 
   645  0394                     	;# 
   646  0395                     	;# 
   647  0396                     	;# 
   648  0FE4                     	;# 
   649  0FE5                     	;# 
   650  0FE6                     	;# 
   651  0FE7                     	;# 
   652  0FE8                     	;# 
   653  0FE9                     	;# 
   654  0FEA                     	;# 
   655  0FEB                     	;# 
   656  0FED                     	;# 
   657  0FEE                     	;# 
   658  0FEF                     	;# 
   659  0711                     	;# 
   660  0712                     	;# 
   661  0713                     	;# 
   662  0714                     	;# 
   663  0715                     	;# 
   664  0716                     	;# 
   665  0717                     	;# 
   666  0718                     	;# 
   667  0719                     	;# 
   668  071A                     	;# 
   669  071A                     	;# 
   670  071A                     	;# 
   671  071B                     	;# 
   672  071C                     	;# 
   673  071C                     	;# 
   674  071C                     	;# 
   675  071D                     	;# 
   676                           
   677                           	psect	idataBANK0
   678  073A                     __pidataBANK0:	
   679                           
   680                           ;initializer for _Frame
   681  073A  3454               	retlw	84
   682  073B  3445               	retlw	69
   683  073C  3453               	retlw	83
   684  073D  3454               	retlw	84
   685  073E  3459               	retlw	89
   686  073F  3400               	retlw	0
   687  0740  3400               	retlw	0
   688  0741  3400               	retlw	0
   689  0742  3400               	retlw	0
   690  0743  3400               	retlw	0
   691  0744  3400               	retlw	0
   692  0745  3400               	retlw	0
   693  0746  3400               	retlw	0
   694  0747  3400               	retlw	0
   695  0748  3400               	retlw	0
   696  0749  3400               	retlw	0
   697  074A  3400               	retlw	0
   698  074B  3400               	retlw	0
   699  074C  3400               	retlw	0
   700  074D  3400               	retlw	0
   701  0011                     _PIR1bits	set	17
   702  0095                     _OPTION_REGbits	set	149
   703  0099                     _OSCCON	set	153
   704  008C                     _TRISA	set	140
   705  008D                     _TRISB	set	141
   706  008E                     _TRISC	set	142
   707  0097                     _WDTCON	set	151
   708  011D                     _APFCON	set	285
   709  010C                     _LATA	set	268
   710  010D                     _LATB	set	269
   711  010D                     _LATBbits	set	269
   712  010E                     _LATC	set	270
   713  018C                     _ANSELA	set	396
   714  018D                     _ANSELB	set	397
   715  018E                     _ANSELC	set	398
   716  019F                     _BAUDCON	set	415
   717  0199                     _RCREG	set	409
   718  019D                     _RCSTA	set	413
   719  019D                     _RCSTAbits	set	413
   720  019C                     _SPBRGH	set	412
   721  019B                     _SPBRGL	set	411
   722  019A                     _TXREG	set	410
   723  019E                     _TXSTA	set	414
   724  0212                     _SSP1ADD	set	530
   725  0215                     _SSP1CON1	set	533
   726  0215                     _SSP1CON1bits	set	533
   727  0214                     _SSP1STAT	set	532
   728  0214                     _SSP1STATbits	set	532
   729  0211                     _SSPBUF	set	529
   730  020D                     _WPUB	set	525
   731  0210                     _WPUE	set	528
   732                           
   733                           	psect	stringtext
   734  072F                     __pstringtext:	
   735  072F                     STR_1:	
   736  072F  3443               	retlw	67	;'C'
   737  0730  346F               	retlw	111	;'o'
   738  0731  3473               	retlw	115	;'s'
   739  0732  344E               	retlw	78	;'N'
   740  0733  3461               	retlw	97	;'a'
   741  0734  3470               	retlw	112	;'p'
   742  0735  3469               	retlw	105	;'i'
   743  0736  3473               	retlw	115	;'s'
   744  0737  347A               	retlw	122	;'z'
   745  0738  3465               	retlw	101	;'e'
   746  0739  3400               	retlw	0
   747                           
   748                           ; #config settings
   749  0000                     
   750                           	psect	cinit
   751  07F4                     start_initialization:	
   752  07F4                     __initialization:	
   753                           
   754                           ; Initialize objects allocated to BANK0
   755  07F4  303A               	movlw	low __pidataBANK0
   756  07F5  0084               	movwf	4
   757  07F6  3087               	movlw	(high __pidataBANK0)| (0+128)
   758  07F7  0085               	movwf	5
   759  07F8  3020               	movlw	low __pdataBANK0
   760  07F9  0086               	movwf	6
   761  07FA  3000               	movlw	high __pdataBANK0
   762  07FB  0087               	movwf	7
   763  07FC  3014               	movlw	20
   764  07FD  2716               	fcall	init_ram
   765  07FE                     end_of_initialization:	
   766                           ;End of C runtime variable initialization code
   767                           
   768  07FE                     __end_of__initialization:	
   769  07FE  0020               	movlb	0
   770  07FF  2FBA               	ljmp	_main	;jump to C main() function
   771                           
   772                           	psect	dataBANK0
   773  0020                     __pdataBANK0:	
   774  0020                     _Frame:	
   775  0020                     	ds	20
   776                           
   777                           	psect	inittext
   778  0716                     init_ram:	
   779  0716  00FE               	movwf	126
   780  0717                     initloop:	
   781  0717  0012               	moviw fsr0++
   782  0718  001E               	movwi fsr1++
   783  0719  0BFE               	decfsz	126,f
   784  071A  2F17               	goto	initloop
   785  071B  3400               	retlw	0
   786                           
   787                           	psect	cstackCOMMON
   788  0070                     __pcstackCOMMON:	
   789  0070                     ?_PIN_MANAGER_Initialize:	
   790  0070                     ??_PIN_MANAGER_Initialize:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_OSCILLATOR_Initialize:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ??_OSCILLATOR_Initialize:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_WDT_Initialize:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ??_WDT_Initialize:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_EUSART_Initialize:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ??_EUSART_Initialize:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_SPI_Initialize:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ??_SPI_Initialize:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_SYSTEM_Initialize:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ??_SYSTEM_Initialize:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_EUSART_Write:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ??_EUSART_Write:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_main:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_sprintf:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_SendFrame:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0070                     EUSART_Write@txData:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0070                     sprintf@f:	
   842                           ; 1 bytes @ 0x0
   843                           
   844                           
   845                           ; 2 bytes @ 0x0
   846  0070                     	ds	1
   847  0071                     ??_SendFrame:	
   848                           
   849                           ; 1 bytes @ 0x1
   850  0071                     	ds	1
   851  0072                     ??_sprintf:	
   852  0072                     SendFrame@Data:	
   853                           ; 1 bytes @ 0x2
   854                           
   855                           
   856                           ; 1 bytes @ 0x2
   857  0072                     	ds	1
   858  0073                     SendFrame@i:	
   859                           
   860                           ; 2 bytes @ 0x3
   861  0073                     	ds	2
   862  0075                     sprintf@ap:	
   863                           
   864                           ; 1 bytes @ 0x5
   865  0075                     	ds	1
   866  0076                     sprintf@c:	
   867                           
   868                           ; 1 bytes @ 0x6
   869  0076                     	ds	1
   870  0077                     sprintf@sp:	
   871                           
   872                           ; 1 bytes @ 0x7
   873  0077                     	ds	1
   874  0078                     ??_main:	
   875                           
   876                           ; 1 bytes @ 0x8
   877  0078                     	ds	3
   878                           
   879                           	psect	maintext
   880  07BA                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 66 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : B1F/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1
   900 ;;      Params:         0       0       0
   901 ;;      Locals:         0       0       0
   902 ;;      Temps:          3       0       0
   903 ;;      Totals:         3       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels required when called:    2
   906 ;; This function calls:
   907 ;;		_SYSTEM_Initialize
   908 ;;		_SendFrame
   909 ;;		_sprintf
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _main
   917  07BA                     _main:	
   918                           
   919                           ;main.c: 69: SYSTEM_Initialize();
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   923  07BA  2710               	fcall	_SYSTEM_Initialize
   924  07BB                     l711:	
   925                           ;main.c: 87: {
   926                           ;main.c: 89: do { LATBbits.LATB3 = 0; } while(0);
   927                           
   928                           ;main.c: 86: while (1)
   929                           
   930  07BB  0022               	movlb	2	; select bank2
   931  07BC  118D               	bcf	13,3	;volatile
   932                           
   933                           ;main.c: 90: do { LATBbits.LATB5 = 1; } while(0);
   934  07BD  168D               	bsf	13,5	;volatile
   935                           
   936                           ;main.c: 91: _delay((unsigned long)((1000)*(16000000/4000.0)));
   937  07BE  3015               	movlw	21
   938  07BF  00FA               	movwf	??_main+2
   939  07C0  304B               	movlw	75
   940  07C1  00F9               	movwf	??_main+1
   941  07C2  30D1               	movlw	209
   942  07C3  00F8               	movwf	??_main
   943  07C4                     u157:	
   944  07C4  0BF8               	decfsz	??_main,f
   945  07C5  2FC4               	goto	u157
   946  07C6  0BF9               	decfsz	??_main+1,f
   947  07C7  2FC4               	goto	u157
   948  07C8  0BFA               	decfsz	??_main+2,f
   949  07C9  2FC4               	goto	u157
   950  07CA  0000               	nop
   951                           
   952                           ;main.c: 92: do { LATBbits.LATB5 = 0; } while(0);
   953  07CB  0022               	movlb	2	; select bank2
   954  07CC  128D               	bcf	13,5	;volatile
   955                           
   956                           ;main.c: 93: do { LATBbits.LATB4 = 1; } while(0);
   957  07CD  160D               	bsf	13,4	;volatile
   958                           
   959                           ;main.c: 94: _delay((unsigned long)((1000)*(16000000/4000.0)));
   960  07CE  3015               	movlw	21
   961  07CF  00FA               	movwf	??_main+2
   962  07D0  304B               	movlw	75
   963  07D1  00F9               	movwf	??_main+1
   964  07D2  30D1               	movlw	209
   965  07D3  00F8               	movwf	??_main
   966  07D4                     u167:	
   967  07D4  0BF8               	decfsz	??_main,f
   968  07D5  2FD4               	goto	u167
   969  07D6  0BF9               	decfsz	??_main+1,f
   970  07D7  2FD4               	goto	u167
   971  07D8  0BFA               	decfsz	??_main+2,f
   972  07D9  2FD4               	goto	u167
   973  07DA  0000               	nop
   974                           
   975                           ;main.c: 95: do { LATBbits.LATB4 = 0; } while(0);
   976  07DB  0022               	movlb	2	; select bank2
   977  07DC  120D               	bcf	13,4	;volatile
   978                           
   979                           ;main.c: 96: do { LATBbits.LATB3 = 1; } while(0);
   980  07DD  158D               	bsf	13,3	;volatile
   981                           
   982                           ;main.c: 97: _delay((unsigned long)((1000)*(16000000/4000.0)));
   983  07DE  3015               	movlw	21
   984  07DF  00FA               	movwf	??_main+2
   985  07E0  304B               	movlw	75
   986  07E1  00F9               	movwf	??_main+1
   987  07E2  30D1               	movlw	209
   988  07E3  00F8               	movwf	??_main
   989  07E4                     u177:	
   990  07E4  0BF8               	decfsz	??_main,f
   991  07E5  2FE4               	goto	u177
   992  07E6  0BF9               	decfsz	??_main+1,f
   993  07E7  2FE4               	goto	u177
   994  07E8  0BFA               	decfsz	??_main+2,f
   995  07E9  2FE4               	goto	u177
   996  07EA  0000               	nop
   997                           
   998                           ;main.c: 99: sprintf(Frame,"CosNapisze");
   999  07EB  302F               	movlw	low (STR_1| (0+32768))
  1000  07EC  00F0               	movwf	sprintf@f
  1001  07ED  3087               	movlw	high (STR_1| (0+32768))
  1002  07EE  00F1               	movwf	sprintf@f+1
  1003  07EF  3020               	movlw	(low (_Frame| 0))& (0+255)
  1004  07F0  2768               	fcall	_sprintf
  1005                           
  1006                           ;main.c: 100: SendFrame(Frame);
  1007  07F1  3020               	movlw	(low (_Frame| 0))& (0+255)
  1008  07F2  2790               	fcall	_SendFrame
  1009  07F3  2FBB               	goto	l711
  1010  07F4                     __end_of_main:	
  1011                           
  1012                           	psect	text1
  1013  0768                     __ptext1:	
  1014 ;; *************** function _sprintf *****************
  1015 ;; Defined at:
  1016 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  sp              1    wreg     PTR unsigned char 
  1019 ;;		 -> Frame(20), 
  1020 ;;  f               2    0[COMMON] PTR const unsigned char 
  1021 ;;		 -> STR_1(11), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  sp              1    7[COMMON] PTR unsigned char 
  1024 ;;		 -> Frame(20), 
  1025 ;;  tmpval          4    0        struct .
  1026 ;;  cp              2    0        PTR const unsigned char 
  1027 ;;  len             2    0        unsigned int 
  1028 ;;  val             2    0        unsigned int 
  1029 ;;  c               1    6[COMMON] char 
  1030 ;;  ap              1    5[COMMON] PTR void [1]
  1031 ;;		 -> ?_sprintf(2), 
  1032 ;;  flag            1    0        unsigned char 
  1033 ;;  prec            1    0        char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2    0[COMMON] int 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1
  1043 ;;      Params:         2       0       0
  1044 ;;      Locals:         3       0       0
  1045 ;;      Temps:          3       0       0
  1046 ;;      Totals:         8       0       0
  1047 ;;Total ram usage:        8 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _sprintf
  1058  0768                     _sprintf:	
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath]
  1062                           ;sprintf@sp stored from wreg
  1063  0768  00F7               	movwf	sprintf@sp
  1064                           
  1065                           ;doprnt.c: 494: va_list ap;
  1066                           ;doprnt.c: 499: signed char c;
  1067                           ;doprnt.c: 506: signed char prec;
  1068                           ;doprnt.c: 508: unsigned char flag;
  1069                           ;doprnt.c: 523: union {
  1070                           ;doprnt.c: 524: unsigned long vd;
  1071                           ;doprnt.c: 525: double integ;
  1072                           ;doprnt.c: 526: } tmpval;
  1073                           ;doprnt.c: 528: unsigned int val;
  1074                           ;doprnt.c: 529: unsigned len;
  1075                           ;doprnt.c: 530: const char * cp;
  1076                           ;doprnt.c: 533: *ap = __va_start();
  1077  0769  3072               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1078  076A  00F2               	movwf	??_sprintf
  1079  076B  0872               	movf	??_sprintf,w
  1080  076C  00F5               	movwf	sprintf@ap
  1081  076D                     l703:	
  1082                           ;doprnt.c: 543: }
  1083                           ;doprnt.c: 1422: {
  1084                           
  1085                           ;doprnt.c: 542: continue;
  1086                           
  1087                           ;doprnt.c: 536: while(c = *f++) {
  1088                           
  1089  076D  0871               	movf	sprintf@f+1,w
  1090  076E  00F3               	movwf	??_sprintf+1
  1091  076F  0870               	movf	sprintf@f,w
  1092  0770  00F2               	movwf	??_sprintf
  1093  0771  0AF0               	incf	sprintf@f,f
  1094  0772  1903               	skipnz
  1095  0773  0AF1               	incf	sprintf@f+1,f
  1096  0774  0872               	movf	??_sprintf,w
  1097  0775  0084               	movwf	4
  1098  0776  0873               	movf	??_sprintf+1,w
  1099  0777  0085               	movwf	5
  1100  0778  0800               	movf	0,w	;code access
  1101  0779  00F4               	movwf	??_sprintf+2
  1102  077A  0874               	movf	??_sprintf+2,w
  1103  077B  00F6               	movwf	sprintf@c
  1104  077C  0876               	movf	sprintf@c,w
  1105  077D  1903               	btfsc	3,2
  1106  077E  2F8B               	goto	l705
  1107                           
  1108                           ;doprnt.c: 540: {
  1109                           ;doprnt.c: 541: ((*sp++ = (c)));
  1110  077F  0876               	movf	sprintf@c,w
  1111  0780  00F2               	movwf	??_sprintf
  1112  0781  0877               	movf	sprintf@sp,w
  1113  0782  0086               	movwf	6
  1114  0783  0187               	clrf	7
  1115  0784  0872               	movf	??_sprintf,w
  1116  0785  0081               	movwf	1
  1117  0786  3001               	movlw	1
  1118  0787  00F2               	movwf	??_sprintf
  1119  0788  0872               	movf	??_sprintf,w
  1120  0789  07F7               	addwf	sprintf@sp,f
  1121  078A  2F6D               	goto	l703
  1122  078B                     l705:	
  1123                           
  1124                           ;doprnt.c: 1469: }
  1125                           ;doprnt.c: 1533: }
  1126                           ;doprnt.c: 1538: *sp = 0;
  1127  078B  0877               	movf	sprintf@sp,w
  1128  078C  0086               	movwf	6
  1129  078D  0187               	clrf	7
  1130  078E  0181               	clrf	1
  1131  078F  0008               	return
  1132  0790                     __end_of_sprintf:	
  1133                           ;doprnt.c: 1540: return 0;
  1134                           ;	Return value of _sprintf is never used
  1135                           
  1136                           
  1137                           	psect	text2
  1138  0790                     __ptext2:	
  1139 ;; *************** function _SendFrame *****************
  1140 ;; Defined at:
  1141 ;;		line 54 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  Data            1    wreg     PTR unsigned char 
  1144 ;;		 -> Frame(20), 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  Data            1    2[COMMON] PTR unsigned char 
  1147 ;;		 -> Frame(20), 
  1148 ;;  i               2    3[COMMON] int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2  148[None  ] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1
  1158 ;;      Params:         0       0       0
  1159 ;;      Locals:         3       0       0
  1160 ;;      Temps:          1       0       0
  1161 ;;      Totals:         4       0       0
  1162 ;;Total ram usage:        4 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    1
  1165 ;; This function calls:
  1166 ;;		_EUSART_Write
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _SendFrame
  1174  0790                     _SendFrame:	
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _SendFrame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1178                           ;SendFrame@Data stored from wreg
  1179  0790  00F2               	movwf	SendFrame@Data
  1180                           
  1181                           ;main.c: 55: for(int i=0; i<20; i++)
  1182  0791  01F3               	clrf	SendFrame@i
  1183  0792  01F4               	clrf	SendFrame@i+1
  1184  0793  0874               	movf	SendFrame@i+1,w
  1185  0794  3A80               	xorlw	128
  1186  0795  00F1               	movwf	??_SendFrame
  1187  0796  3080               	movlw	128
  1188  0797  0271               	subwf	??_SendFrame,w
  1189  0798  1D03               	skipz
  1190  0799  2F9C               	goto	u35
  1191  079A  3014               	movlw	20
  1192  079B  0273               	subwf	SendFrame@i,w
  1193  079C                     u35:	
  1194  079C  1803               	btfsc	3,0
  1195  079D  2FB5               	goto	l613
  1196  079E                     l607:	
  1197                           
  1198                           ;main.c: 56: {
  1199                           ;main.c: 57: EUSART_Write(Data[i]);
  1200  079E  0873               	movf	SendFrame@i,w
  1201  079F  0772               	addwf	SendFrame@Data,w
  1202  07A0  00F1               	movwf	??_SendFrame
  1203  07A1  0871               	movf	??_SendFrame,w
  1204  07A2  0086               	movwf	6
  1205  07A3  0187               	clrf	7
  1206  07A4  0801               	movf	1,w
  1207  07A5  271C               	fcall	_EUSART_Write
  1208  07A6  3001               	movlw	1
  1209  07A7  07F3               	addwf	SendFrame@i,f
  1210  07A8  3000               	movlw	0
  1211  07A9  3DF4               	addwfc	SendFrame@i+1,f
  1212  07AA  0874               	movf	SendFrame@i+1,w
  1213  07AB  3A80               	xorlw	128
  1214  07AC  00F1               	movwf	??_SendFrame
  1215  07AD  3080               	movlw	128
  1216  07AE  0271               	subwf	??_SendFrame,w
  1217  07AF  1D03               	skipz
  1218  07B0  2FB3               	goto	u45
  1219  07B1  3014               	movlw	20
  1220  07B2  0273               	subwf	SendFrame@i,w
  1221  07B3                     u45:	
  1222  07B3  1C03               	skipc
  1223  07B4  2F9E               	goto	l607
  1224  07B5                     l613:	
  1225                           
  1226                           ;main.c: 58: }
  1227                           ;main.c: 59: EUSART_Write(0x0D);
  1228  07B5  300D               	movlw	13
  1229  07B6  271C               	fcall	_EUSART_Write
  1230                           
  1231                           ;main.c: 60: EUSART_Write(0x0A);
  1232  07B7  300A               	movlw	10
  1233  07B8  271C               	fcall	_EUSART_Write
  1234  07B9  0008               	return
  1235  07BA                     __end_of_SendFrame:	
  1236                           
  1237                           	psect	text3
  1238  071C                     __ptext3:	
  1239 ;; *************** function _EUSART_Write *****************
  1240 ;; Defined at:
  1241 ;;		line 96 in file "mcc_generated_files/eusart.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  txData          1    wreg     unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  txData          1    0[COMMON] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1
  1255 ;;      Params:         0       0       0
  1256 ;;      Locals:         1       0       0
  1257 ;;      Temps:          0       0       0
  1258 ;;      Totals:         1       0       0
  1259 ;;Total ram usage:        1 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_SendFrame
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function _EUSART_Write
  1270  071C                     _EUSART_Write:	
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _EUSART_Write: [wreg]
  1274                           ;EUSART_Write@txData stored from wreg
  1275  071C  00F0               	movwf	EUSART_Write@txData
  1276  071D                     l99:	
  1277                           ;eusart.c: 99: {
  1278                           
  1279                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  1280                           
  1281  071D  0020               	movlb	0	; select bank0
  1282  071E  1E11               	btfss	17,4	;volatile
  1283  071F  2F1D               	goto	l99
  1284                           
  1285                           ;eusart.c: 100: }
  1286                           ;eusart.c: 102: TXREG = txData;
  1287  0720  0870               	movf	EUSART_Write@txData,w
  1288  0721  0023               	movlb	3	; select bank3
  1289  0722  009A               	movwf	26	;volatile
  1290  0723  0008               	return
  1291  0724                     __end_of_EUSART_Write:	
  1292                           
  1293                           	psect	text4
  1294  0710                     __ptext4:	
  1295 ;; *************** function _SYSTEM_Initialize *****************
  1296 ;; Defined at:
  1297 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1
  1311 ;;      Params:         0       0       0
  1312 ;;      Locals:         0       0       0
  1313 ;;      Temps:          0       0       0
  1314 ;;      Totals:         0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		_EUSART_Initialize
  1320 ;;		_OSCILLATOR_Initialize
  1321 ;;		_PIN_MANAGER_Initialize
  1322 ;;		_SPI_Initialize
  1323 ;;		_WDT_Initialize
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _SYSTEM_Initialize
  1331  0710                     _SYSTEM_Initialize:	
  1332                           
  1333                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1337  0710  274E               	fcall	_PIN_MANAGER_Initialize
  1338                           
  1339                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1340  0711  2702               	fcall	_OSCILLATOR_Initialize
  1341                           
  1342                           ;mcc.c: 74: WDT_Initialize();
  1343  0712  2706               	fcall	_WDT_Initialize
  1344                           
  1345                           ;mcc.c: 75: SPI_Initialize();
  1346  0713  270A               	fcall	_SPI_Initialize
  1347                           
  1348                           ;mcc.c: 76: EUSART_Initialize();
  1349  0714  2724               	fcall	_EUSART_Initialize
  1350  0715  0008               	return
  1351  0716                     __end_of_SYSTEM_Initialize:	
  1352                           
  1353                           	psect	text5
  1354  0706                     __ptext5:	
  1355 ;; *************** function _WDT_Initialize *****************
  1356 ;; Defined at:
  1357 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1
  1371 ;;      Params:         0       0       0
  1372 ;;      Locals:         0       0       0
  1373 ;;      Temps:          0       0       0
  1374 ;;      Totals:         0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_SYSTEM_Initialize
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _WDT_Initialize
  1386  0706                     _WDT_Initialize:	
  1387                           
  1388                           ;mcc.c: 90: WDTCON = 0x16;
  1389                           
  1390                           ;incstack = 0
  1391                           ; Regs used in _WDT_Initialize: [wreg]
  1392  0706  3016               	movlw	22
  1393  0707  0021               	movlb	1	; select bank1
  1394  0708  0097               	movwf	23	;volatile
  1395  0709  0008               	return
  1396  070A                     __end_of_WDT_Initialize:	
  1397                           
  1398                           	psect	text6
  1399  070A                     __ptext6:	
  1400 ;; *************** function _SPI_Initialize *****************
  1401 ;; Defined at:
  1402 ;;		line 63 in file "mcc_generated_files/spi.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1
  1416 ;;      Params:         0       0       0
  1417 ;;      Locals:         0       0       0
  1418 ;;      Temps:          0       0       0
  1419 ;;      Totals:         0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_SYSTEM_Initialize
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _SPI_Initialize
  1431  070A                     _SPI_Initialize:	
  1432                           
  1433                           ;spi.c: 68: SSP1STAT = 0x00;
  1434                           
  1435                           ;incstack = 0
  1436                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  1437  070A  0024               	movlb	4	; select bank4
  1438  070B  0194               	clrf	20	;volatile
  1439                           
  1440                           ;spi.c: 71: SSP1CON1 = 0x20;
  1441  070C  3020               	movlw	32
  1442  070D  0095               	movwf	21	;volatile
  1443                           
  1444                           ;spi.c: 74: SSP1ADD = 0x00;
  1445  070E  0192               	clrf	18	;volatile
  1446  070F  0008               	return
  1447  0710                     __end_of_SPI_Initialize:	
  1448                           
  1449                           	psect	text7
  1450  074E                     __ptext7:	
  1451 ;; *************** function _PIN_MANAGER_Initialize *****************
  1452 ;; Defined at:
  1453 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1
  1467 ;;      Params:         0       0       0
  1468 ;;      Locals:         0       0       0
  1469 ;;      Temps:          0       0       0
  1470 ;;      Totals:         0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_SYSTEM_Initialize
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _PIN_MANAGER_Initialize
  1482  074E                     _PIN_MANAGER_Initialize:	
  1483                           
  1484                           ;pin_manager.c: 56: LATA = 0x00;
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1488  074E  0022               	movlb	2	; select bank2
  1489  074F  018C               	clrf	12	;volatile
  1490                           
  1491                           ;pin_manager.c: 57: LATB = 0x00;
  1492  0750  018D               	clrf	13	;volatile
  1493                           
  1494                           ;pin_manager.c: 58: LATC = 0x00;
  1495  0751  018E               	clrf	14	;volatile
  1496                           
  1497                           ;pin_manager.c: 63: TRISA = 0x00;
  1498  0752  0021               	movlb	1	; select bank1
  1499  0753  018C               	clrf	12	;volatile
  1500                           
  1501                           ;pin_manager.c: 64: TRISB = 0xC7;
  1502  0754  30C7               	movlw	199
  1503  0755  008D               	movwf	13	;volatile
  1504                           
  1505                           ;pin_manager.c: 65: TRISC = 0x97;
  1506  0756  3097               	movlw	151
  1507  0757  008E               	movwf	14	;volatile
  1508                           
  1509                           ;pin_manager.c: 70: ANSELC = 0x00;
  1510  0758  0023               	movlb	3	; select bank3
  1511  0759  018E               	clrf	14	;volatile
  1512                           
  1513                           ;pin_manager.c: 71: ANSELB = 0x3F;
  1514  075A  303F               	movlw	63
  1515  075B  008D               	movwf	13	;volatile
  1516                           
  1517                           ;pin_manager.c: 72: ANSELA = 0x2F;
  1518  075C  302F               	movlw	47
  1519  075D  008C               	movwf	12	;volatile
  1520                           
  1521                           ;pin_manager.c: 77: WPUE = 0x08;
  1522  075E  3008               	movlw	8
  1523  075F  0024               	movlb	4	; select bank4
  1524  0760  0090               	movwf	16	;volatile
  1525                           
  1526                           ;pin_manager.c: 78: WPUB = 0xFF;
  1527  0761  30FF               	movlw	255
  1528  0762  008D               	movwf	13	;volatile
  1529                           
  1530                           ;pin_manager.c: 79: OPTION_REGbits.nWPUEN = 0;
  1531  0763  0021               	movlb	1	; select bank1
  1532  0764  1395               	bcf	21,7	;volatile
  1533                           
  1534                           ;pin_manager.c: 85: APFCON = 0x00;
  1535  0765  0022               	movlb	2	; select bank2
  1536  0766  019D               	clrf	29	;volatile
  1537  0767  0008               	return
  1538  0768                     __end_of_PIN_MANAGER_Initialize:	
  1539                           
  1540                           	psect	text8
  1541  0702                     __ptext8:	
  1542 ;; *************** function _OSCILLATOR_Initialize *****************
  1543 ;; Defined at:
  1544 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1
  1558 ;;      Params:         0       0       0
  1559 ;;      Locals:         0       0       0
  1560 ;;      Temps:          0       0       0
  1561 ;;      Totals:         0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_SYSTEM_Initialize
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _OSCILLATOR_Initialize
  1573  0702                     _OSCILLATOR_Initialize:	
  1574                           
  1575                           ;mcc.c: 82: OSCCON = 0x78;
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  1579  0702  3078               	movlw	120
  1580  0703  0021               	movlb	1	; select bank1
  1581  0704  0099               	movwf	25	;volatile
  1582  0705  0008               	return
  1583  0706                     __end_of_OSCILLATOR_Initialize:	
  1584                           
  1585                           	psect	text9
  1586  0724                     __ptext9:	
  1587 ;; *************** function _EUSART_Initialize *****************
  1588 ;; Defined at:
  1589 ;;		line 55 in file "mcc_generated_files/eusart.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1
  1603 ;;      Params:         0       0       0
  1604 ;;      Locals:         0       0       0
  1605 ;;      Temps:          0       0       0
  1606 ;;      Totals:         0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_SYSTEM_Initialize
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _EUSART_Initialize
  1618  0724                     _EUSART_Initialize:	
  1619                           
  1620                           ;eusart.c: 60: BAUDCON = 0x08;
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1624  0724  3008               	movlw	8
  1625  0725  0023               	movlb	3	; select bank3
  1626  0726  009F               	movwf	31	;volatile
  1627                           
  1628                           ;eusart.c: 63: RCSTA = 0x90;
  1629  0727  3090               	movlw	144
  1630  0728  009D               	movwf	29	;volatile
  1631                           
  1632                           ;eusart.c: 66: TXSTA = 0x24;
  1633  0729  3024               	movlw	36
  1634  072A  009E               	movwf	30	;volatile
  1635                           
  1636                           ;eusart.c: 69: SPBRGL = 0xCF;
  1637  072B  30CF               	movlw	207
  1638  072C  009B               	movwf	27	;volatile
  1639                           
  1640                           ;eusart.c: 72: SPBRGH = 0x00;
  1641  072D  019C               	clrf	28	;volatile
  1642  072E  0008               	return
  1643  072F                     __end_of_EUSART_Initialize:	
  1644  007E                     btemp	set	126	;btemp
  1645  007E                     wtemp	set	126
  1646  007E                     wtemp0	set	126
  1647  0080                     wtemp1	set	128
  1648  0082                     wtemp2	set	130
  1649  0084                     wtemp3	set	132
  1650  0086                     wtemp4	set	134
  1651  0088                     wtemp5	set	136
  1652  007F                     wtemp6	set	127
  1653  007E                     ttemp	set	126
  1654  007E                     ttemp0	set	126
  1655  0081                     ttemp1	set	129
  1656  0084                     ttemp2	set	132
  1657  0087                     ttemp3	set	135
  1658  007F                     ttemp4	set	127
  1659  007E                     ltemp	set	126
  1660  007E                     ltemp0	set	126
  1661  0082                     ltemp1	set	130
  1662  0086                     ltemp2	set	134
  1663  0080                     ltemp3	set	128


Data Sizes:
    Strings     11
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0      20
    BANK1            32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Frame(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    SendFrame@Data	PTR unsigned char  size(1) Largest target is 20
		 -> Frame(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _SendFrame->_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     270
                                              8 COMMON     3     3      0
                  _SYSTEM_Initialize
                          _SendFrame
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    18      2     171
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SendFrame                                            4     4      0      99
                                              1 COMMON     4     4      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _WDT_Initialize
   _SendFrame
     _EUSART_Write
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      14       6       25.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Nov 26 12:57:24 2016

                 _SPI_Initialize 070A                      __CFG_CP$OFF 0000                               l99 071D  
                             u35 079C                               u45 07B3                      __CFG_LVP$ON 0000  
                            l613 07B5                              l607 079E                              l703 076D  
                            l711 07BB                              l705 078B                              u157 07C4  
                            u167 07D4                              u177 07E4                     __CFG_BORV$LO 0000  
                   __CFG_IESO$ON 0000                             STR_1 072F                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _WPUB 020D  
                           _WPUE 0210                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 07BA                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0001                             ttemp 007E  
                           wtemp 007E           __end_of_SPI_Initialize 0710                    __CFG_MCLRE$ON 0000  
                  ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 0004    __end_of_OSCILLATOR_Initialize 0706  
                          ?_main 0070                    __CFG_WDTE$OFF 0000                            _RCREG 0199  
                          _RCSTA 019D                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TXREG 019A                            _TXSTA 019E  
                          _Frame 0020                   _WDT_Initialize 0706                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  __end_of_sprintf 0790                       SendFrame@i 0073  
                ?_SPI_Initialize 0070                  __initialization 07F4                     __end_of_main 07F4  
                 ??_EUSART_Write 0070                   __CFG_LPBOR$OFF 0000                           ??_main 0078  
         __end_of_WDT_Initialize 070A                           _APFCON 011D                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                           _WDTCON 0097  
                         _SSPBUF 0211                   __CFG_PWRTE$OFF 0000               __size_of_SendFrame 002A  
                 __CFG_STVREN$ON 0000                  ?_WDT_Initialize 0070                        ??_sprintf 0072  
              _SYSTEM_Initialize 0710          __end_of__initialization 07FE               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070                     __pidataBANK0 073A              ??_SYSTEM_Initialize 0070  
                 _OPTION_REGbits 0095                __end_of_SendFrame 07BA        __end_of_SYSTEM_Initialize 0716  
           __end_of_EUSART_Write 0724                  __CFG_VCAPEN$OFF 0000                       __pmaintext 07BA  
                        _BAUDCON 019F                          _SSP1ADD 0212                 ??_SPI_Initialize 0070  
                        __ptext1 0768                          __ptext2 0790                          __ptext3 071C  
                        __ptext4 0710                          __ptext5 0706                          __ptext6 070A  
                        __ptext7 074E                          __ptext8 0702                          __ptext9 0724  
          _OSCILLATOR_Initialize 0702         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0006  
                        _sprintf 0768             end_of_initialization 07FE                          init_ram 0716  
                        initloop 0717                _EUSART_Initialize 0724               ?_EUSART_Initialize 0070  
                      _RCSTAbits 019D                     __pstringtext 072F              ??_EUSART_Initialize 0070  
               ??_WDT_Initialize 0070                 __CFG_FOSC$INTOSC 0000            __size_of_EUSART_Write 0008  
      __end_of_EUSART_Initialize 072F                     _EUSART_Write 071C           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07F4  __size_of_PIN_MANAGER_Initialize 001A                        _SendFrame 0790  
                    __pdataBANK0 0020                        ___latbits 0000       __size_of_EUSART_Initialize 000B  
                     ?_SendFrame 0070           _PIN_MANAGER_Initialize 074E                         ?_sprintf 0070  
                       _LATBbits 010D                         _PIR1bits 0011                         _SSP1CON1 0215  
                       _SSP1STAT 0214                      ??_SendFrame 0071          __size_of_SPI_Initialize 0006  
        ??_OSCILLATOR_Initialize 0070                     _SSP1CON1bits 0215                 __size_of_sprintf 0028  
                  __size_of_main 003A                     _SSP1STATbits 0214          __size_of_WDT_Initialize 0004  
                      sprintf@ap 0075                        sprintf@sp 0077          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                         sprintf@c 0076                         sprintf@f 0070  
             EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 0768                    SendFrame@Data 0072  
